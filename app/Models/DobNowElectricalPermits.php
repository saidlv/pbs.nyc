<?php

namespace App\Models;


use App\Helpers\Helper;
use Carbon\Carbon;

class DobNowElectricalPermits extends ODataModel
{
    public $subject = "New DOB Now Electrical Permit Issued";
    public $updateSubject = "New DOB Now Electrical Permit Status Update";
    public $mailview = 'mails.alerts.dobNowElectricalPermits';
    protected $datasetId = "dm9a-ab7w";
    protected $datasetName = "DOB NOW: Electrical Permit Applications";

    protected $dataColumn = "bin";
    protected $dataSocrataKey = "bin";

    protected $primaryKey = 'job_filing_number';

    protected $table = 'dob_now_electrical_permits';

    protected $updateFrequency = 'daily';

    protected $notifiables = [
        'filing_status',
        'permit_issued_date',
    ];

    protected $selectables = ['job_filing_number',
        'job_number',
        'filing_date',
        'filing_status',
        'bin',
        'applicant_first_name',
        'applicant_last_name',
        'license_type',
        'license_number',
        'firm_name',
        'permit_issued_date',
    ];

    protected $fillable = ['job_filing_number',
        'job_number',
        'filing_number',
        'filing_date',
        'filing_type',
        'filing_status',
        'job_status',
        'house_number',
        'street_name',
        'borough',
        'zip_code',
        'block',
        'lot',
        'bin',
        'community_board',
        'joint_venture_work',
        'building_use_type',
        'applicant_first_name',
        'applicant_last_name',
        'license_type',
        'license_number',
        'firm_name',
        'firm_number',
        'firm_address',
        'city',
        'state',
        'zip',
        'general_liability_company',
        'general_liability_policy',
        'general_liability_expiration',
        'worker_comp_company_name',
        'worker_comp_policy',
        'worker_comp_expiration_date',
        'disability_company_name',
        'disability_policy',
        'disability_expiration_date',
        'owner_first_name',
        'owner_last_name',
        'title',
        'business_name',
        'owner_address',
        'owner_city',
        'owner_state',
        'owner_zip',
        'owner_type',
        'auth_rep_first_name',
        'auth_rep_last_name',
        'auth_rep_owner_relation',
        'coo_related',
        'const_bis_job_number',
        'removal_of_vio_or_owner',
        'svc_work_notify_utility',
        'general_wiring',
        'lighting_work',
        'temp_construction_svc',
        'temp_light_power',
        'hvac_wiring',
        'boiler_burner_wiring',
        'category_work_list',
        '_3_wire',
        '_4_wire',
        '_10_points',
        'existing_meters',
        'new_meters',
        'remove_meters',
        'total_meters',
        'job_description',
        'permit_issued_date',
        'job_start_date',
        'completion_date',
        'filing_fee',
        'legalization_fee',
        'nogood_check_fee',
        'total_billable_work_fee',
        'amount_paid',
        'amount_due',
        'payment_method',
        'gis_latitude',
        'gis_longitude',
        'gis_council_district',
        'gis_census_tract',
        'gis_bin',
        'gis_bbl',
        'gis_nta_name'];


    protected $casts = [
        'job_filing_number' => 'string',
    ];

    public function filingDate()
    {
        return Helper::carbonParseYmd($this->filing_date);
    }

    public function permitIssuedDate()
    {
        return Helper::carbonParseYmd($this->permit_issued_date);
    }

    public function scopeSummary($query)
    {

        return $query->where('filing_status', 'not like', '%complete%');
        //return $query->where('filing_date', '>', now()->addYears(-3)->format('Y') . "-01-01T00:00:00.000");
    }

//    protected function getWhereString()
//    {
//        return parent::getWhereString() . " and filing_date > '" . now()->addYears(-3)->format('Y') . "-01-01T00:00:00.000'"; // TODO: Change the autogenerated stub
//    }

}
